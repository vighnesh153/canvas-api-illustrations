{"version":3,"sources":["illustrations/tree-path-finder/controller.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","models/canvas.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["Cell","y","canvas","radius","defaultRadius","color","colors","defaultCell","exists","leftMax","rightMax","leftChild","rightChild","startFound","endFound","liesOnPath","this","x","drawFilledCircle","start","end","branch","pathColor","visited","TreePathFindingVisualizerController","canvasEl","animationRunning","tree","interval","setTimeout","bothFound","Canvas","generateAllNodes","generateRandomStartAndEnd","dfsFindStartAndEndInitializer","plot","resetNodes","setStartAndEndColor","generatorObject","setInterval","next","done","stopAnimation","clearInterval","dfsFindStartAndEnd","e","node","drawFilledRect","width","height","randomFunc","n","Math","floor","random","length","clearBackground","drawBranches","drawTreeNodes","root","push","totalNodes","i","parentIndex","parent","child","forEach","cell","index","drawLine","c","draw","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","canvasContext","drawBitmap","bind","drawOutlineRect","writeText","getContext","reset","getBoundingClientRect","setTransform","useBitmap","angle","save","translate","rotate","drawImage","restore","fillStyle","fillRect","strokeStyle","strokeRect","beginPath","moveTo","arcTo","stroke","x1","y1","x2","y2","lineWidth","lineTo","dashParams","setLineDash","centerX","centerY","arc","PI","fill","text","fontSize","fillText","module","exports","runtime","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","value","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","iterable","iteratorMethod","isNaN","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_createForOfIteratorHelper","o","Array","isArray","F","s","_e","f","it","normalCompletion","didErr","step","_e2"],"mappings":"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","file":"static/js/2.efb55ab6.chunk.js","sourcesContent":["import Canvas from \"src/models/canvas\";\n\nclass Cell {\n  static readonly defaultRadius = 4;\n\n  get x() {\n    return ((this.leftMax as number) + (this.rightMax as number)) / 2;\n  }\n\n  radius = Cell.defaultRadius;\n  color = colors.defaultCell;\n  exists = true;\n\n  leftMax: number | undefined;\n  rightMax: number | undefined;\n\n  leftChild: Cell | undefined;\n  rightChild: Cell | undefined;\n\n  startFound = false;\n  endFound = false;\n\n  liesOnPath = false;\n\n  constructor(public y: number, private canvas: Canvas) {}\n\n  draw() {\n    if (this.exists) {\n      const { x, y, color, radius } = this;\n      this.canvas.drawFilledCircle(x, y, radius, color);\n    }\n  }\n}\n\nconst colors = {\n  defaultCell: \"lightgreen\",\n  start: \"red\",\n  end: \"red\",\n  branch: \"lightblue\",\n  pathColor: \"yellow\",\n  visited: \"darkgreen\",\n};\n\nexport class TreePathFindingVisualizerController {\n  canvas: Canvas;\n  animationRunning = false;\n\n  tree: Cell[] = [];\n  start: Cell | null = null;\n  end: Cell | null = null;\n\n  interval = setTimeout(() => {}, 0);\n\n  bothFound = false;\n\n  constructor(canvasEl: HTMLCanvasElement) {\n    this.canvas = new Canvas(canvasEl);\n    this.generateAllNodes();\n    this.generateRandomStartAndEnd();\n    this.dfsFindStartAndEndInitializer();\n    this.plot();\n  }\n\n  startAnimation() {\n    this.bothFound = false;\n    this.resetNodes();\n    this.setStartAndEndColor();\n    this.animationRunning = true;\n    const generatorObject = this.dfsFindStartAndEndInitializer();\n\n    this.interval = setInterval(() => {\n      this.plot();\n      if (generatorObject.next().done) {\n        this.stopAnimation();\n      }\n    }, 100);\n  }\n\n  stopAnimation() {\n    clearInterval(this.interval);\n    clearInterval(this.interval);\n    this.animationRunning = false;\n    this.plot();\n  }\n\n  *dfsFindStartAndEndInitializer() {\n    for (const _ of this.dfsFindStartAndEnd(this.tree[0])) {\n      yield;\n    }\n  }\n\n  *dfsFindStartAndEnd(node: Cell) {\n    if (node && node.exists) {\n      node.color = colors.visited;\n      if (this.bothFound) {\n        return;\n      }\n\n      for (const item of this.dfsFindStartAndEnd(node.leftChild as Cell)) {\n        yield;\n      }\n      if (!this.bothFound) {\n        for (const item of this.dfsFindStartAndEnd(node.rightChild as Cell)) {\n          yield;\n        }\n      }\n\n      const { leftChild, rightChild } = node;\n\n      node.startFound = (node === this.start ||\n        (leftChild && leftChild.startFound) ||\n        (rightChild && rightChild.startFound)) as boolean;\n\n      node.endFound = (node === this.end ||\n        (leftChild && leftChild.endFound) ||\n        (rightChild && rightChild.endFound)) as boolean;\n\n      if (node.startFound || node.endFound) {\n        node.color = colors.pathColor;\n        node.liesOnPath = true;\n      }\n\n      if (node.startFound && node.endFound) {\n        this.bothFound = true;\n      }\n\n      if (\n        (leftChild && leftChild.startFound && leftChild.endFound) ||\n        (rightChild && rightChild.startFound && rightChild.endFound)\n      ) {\n        node.color = colors.visited;\n        node.liesOnPath = false;\n      }\n\n      this.setStartAndEndColor();\n      node.radius = Cell.defaultRadius * 2;\n      yield;\n      if (!node.liesOnPath) {\n        node.radius = Cell.defaultRadius;\n      }\n    }\n  }\n\n  clearBackground() {\n    this.canvas.drawFilledRect(\n      0,\n      0,\n      this.canvas.width,\n      this.canvas.height,\n      \"black\"\n    );\n  }\n\n  setStartAndEndColor() {\n    (this.start as Cell).color = colors.start;\n    (this.end as Cell).color = colors.end;\n  }\n\n  generateRandomStartAndEnd() {\n    this.stopAnimation();\n    this.resetNodes();\n\n    const { tree } = this;\n    const randomFunc = (n: number) => {\n      return Math.floor(Math.random() * n);\n    };\n\n    if (this.start) {\n      this.start.color = colors.defaultCell;\n    }\n\n    if (this.end) {\n      this.end.color = colors.defaultCell;\n    }\n\n    this.start = null;\n    while (this.start === null || !this.start.exists) {\n      this.start = tree[randomFunc(tree.length)];\n    }\n    this.end = null;\n    while (this.end === null || this.end === this.start || !this.end.exists) {\n      this.end = tree[randomFunc(tree.length)];\n    }\n\n    this.setStartAndEndColor();\n    this.plot();\n  }\n\n  plot() {\n    this.clearBackground();\n    this.drawBranches();\n    this.drawTreeNodes();\n  }\n\n  generateAllNodes() {\n    const root = new Cell(30, this.canvas);\n    root.leftMax = 0;\n    root.rightMax = this.canvas.width;\n\n    this.tree = [];\n    this.tree.push(root);\n\n    const totalNodes = 2 ** 7;\n    const yDifference = 40;\n    let i = 0;\n    while (++i < totalNodes - 1) {\n      const parentIndex = Math.floor((i - 1) / 2);\n      const parent = this.tree[parentIndex];\n      const child = new Cell(parent.y + yDifference, this.canvas);\n\n      if (i % 2 === 1) {\n        child.leftMax = parent.leftMax;\n        child.rightMax = parent.x;\n        parent.leftChild = child;\n      } else {\n        child.leftMax = parent.x;\n        child.rightMax = parent.rightMax;\n        parent.rightChild = child;\n      }\n      this.tree.push(child);\n    }\n  }\n\n  drawBranches() {\n    this.tree.forEach((cell, index) => {\n      const parentIndex = Math.floor((index - 1) / 2);\n      const parent = this.tree[parentIndex];\n\n      if (parent && cell.exists) {\n        this.canvas.drawLine(\n          cell.x,\n          cell.y,\n          parent.x,\n          parent.y,\n          1,\n          colors.branch\n        );\n      }\n    });\n  }\n\n  drawTreeNodes() {\n    this.tree.forEach((c) => c.draw());\n  }\n\n  resetNodes() {\n    this.tree.forEach((cell) => {\n      cell.color = colors.defaultCell;\n      cell.startFound = false;\n      cell.endFound = false;\n      cell.radius = Cell.defaultRadius;\n      cell.liesOnPath = false;\n    });\n  }\n\n  generateRandomTree() {\n    this.tree.forEach((cell, index) => {\n      const parentIndex = Math.floor((index - 1) / 2);\n      const parent = this.tree[parentIndex];\n      cell.exists = true;\n\n      if (parent === undefined || !parent.exists) {\n        cell.exists = false;\n      } else {\n        cell.exists = Math.random() < 0.9;\n      }\n      this.tree[0].exists = true;\n    });\n    this.generateRandomStartAndEnd();\n  }\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default class Canvas {\n    private canvas: HTMLCanvasElement;\n    private canvasContext: CanvasRenderingContext2D;\n\n    get getBoundingClientRect() {\n        return this.canvas.getBoundingClientRect();\n    }\n\n    get width(): number {\n        return this.canvas.width;\n    }\n\n    get height(): number {\n        return this.canvas.height;\n    }\n\n    constructor(canvas: HTMLCanvasElement) {\n        this.drawBitmap = this.drawBitmap.bind(this);\n        this.drawFilledRect = this.drawFilledRect.bind(this);\n        this.drawOutlineRect = this.drawOutlineRect.bind(this);\n        this.drawLine = this.drawLine.bind(this);\n        this.drawFilledCircle = this.drawFilledCircle.bind(this);\n        this.drawBitmap = this.drawBitmap.bind(this);\n        this.writeText = this.writeText.bind(this);\n\n        this.canvas = canvas;\n        this.canvasContext =\n            this.canvas.getContext('2d') as CanvasRenderingContext2D;\n        this.reset();\n    }\n\n    reset() {\n        this.canvasContext.setTransform(1, 0, 0, 1, 0, 0);\n    }\n\n    drawBitmap(useBitmap: CanvasImageSource, x: number, y: number, angle: number) {\n        this.canvasContext.save();\n        this.canvasContext.translate(x, y);\n        this.canvasContext.rotate(angle);\n        this.canvasContext.drawImage(useBitmap, -useBitmap.width / 2, -useBitmap.height / 2);\n        this.canvasContext.restore();\n    }\n\n    drawFilledRect(x: number, y: number, width: number, height: number, color: string) {\n        this.canvasContext.fillStyle = color;\n        this.canvasContext.fillRect(x, y, width, height);\n    }\n\n    drawOutlineRect(x: number, y: number, width: number, height: number, color: string) {\n        this.canvasContext.strokeStyle = color;\n        this.canvasContext.strokeRect(x, y, width, height);\n    }\n\n    drawRoundedRect(\n        x: number, y: number, width: number, height: number, radius: number, color: string\n    ) {\n        this.canvasContext.beginPath();\n        this.canvasContext.strokeStyle = color;\n        this.canvasContext.moveTo(x + width - radius, y + height);\n        this.canvasContext.arcTo(x, y + height, x, y, radius);\n        this.canvasContext.arcTo(x, y, x + width, y, radius);\n        this.canvasContext.arcTo(x + width, y, x + width, y + height, radius);\n        this.canvasContext.arcTo(x + width, y + height, x, y + height, radius);\n        this.canvasContext.stroke();\n    }\n\n    drawLine(x1: number, y1: number, x2: number, y2: number, lineWidth: number, color: string) {\n        this.canvasContext.save();\n        this.canvasContext.beginPath();\n        this.canvasContext.lineWidth = lineWidth;\n        this.canvasContext.strokeStyle = color;\n        this.canvasContext.moveTo(x1, y1);\n        this.canvasContext.lineTo(x2, y2);\n        this.canvasContext.stroke();\n        this.canvasContext.restore();\n    }\n\n    drawDashedLine(x1: number, y1: number, x2: number, y2: number, lineWidth: number, color: string, dashParams: number[]) {\n        this.canvasContext.setLineDash(dashParams);\n        this.drawLine(x1, y1, x2, y2, lineWidth, color);\n        this.canvasContext.setLineDash([]);\n    }\n\n    drawFilledCircle(centerX: number, centerY: number, radius: number, color: string) {\n        this.canvasContext.beginPath();\n        this.canvasContext.fillStyle = color;\n        this.canvasContext.arc(centerX, centerY, radius, 0, 2 * Math.PI, true);\n        this.canvasContext.fill();\n    }\n\n    writeText(text: string, x: number, y: number, fontSize: number, color: string) {\n        this.canvasContext.fillStyle = color;\n        this.canvasContext.fillText(text, x, y);\n    }\n\n    translate(x: number, y: number) {\n        this.canvasContext.translate(x, y);\n    }\n\n    rotate(angle: number) {\n        this.canvasContext.rotate(angle);\n    }\n\n    pushState() {\n        this.canvasContext.save();\n    }\n\n    popState() {\n        this.canvasContext.restore();\n    }\n}\n\n\n// Mouse handler\n// let mouseX, mouseY;\n// canvas-container.addEventListener('mousemove', function (event) {\n//         let rect = canvas-container.getBoundingClientRect();\n//         let root = document.documentElement;\n\n//         mouseX = event.clientX - rect.left - root.scrollLeft;\n//         mouseY = event.clientY - rect.top - root.scrollTop;\n//     });\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}